@model Cstieg.Sales.Models.PromoCode

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PromoCode</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.Title == "Edit")
        {
            @Html.HiddenFor(model => model.Id)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.Code, ViewData).Description
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.Description, ViewData).Description
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionalItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PromotionalItemId, (SelectList)ViewBag.PromotionalItemList, 
                    "***Select***", new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @ModelMetadata.FromLambdaExpression(model => model.PromotionalItem, ViewData).Description
                @Html.ValidationMessageFor(model => model.PromotionalItemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionalItemPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PromotionalItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.PromotionalItemPrice, ViewData).Description
                @Html.ValidationMessageFor(model => model.PromotionalItemPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WithPurchaseOfId, "WithPurchaseOfId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WithPurchaseOfId, (SelectList)ViewBag.WithPurchaseOfList, 
                    "***Select***", new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @ModelMetadata.FromLambdaExpression(model => model.WithPurchaseOf, ViewData).Description
                @Html.ValidationMessageFor(model => model.WithPurchaseOfId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumQualifyingPurchase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimumQualifyingPurchase, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.MinimumQualifyingPurchase, ViewData).Description
                @Html.ValidationMessageFor(model => model.MinimumQualifyingPurchase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentOffOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentOffOrder, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.PercentOffOrder, ViewData).Description
                @Html.ValidationMessageFor(model => model.PercentOffOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentOffItem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentOffItem, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.PercentOffItem, ViewData).Description
                @Html.ValidationMessageFor(model => model.PercentOffItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialPrice, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.SpecialPrice, ViewData).Description
                @Html.ValidationMessageFor(model => model.SpecialPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialPriceItem, "SpecialPriceItemId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SpecialPriceItemId, (SelectList)ViewBag.SpecialPriceItemList,
                    "***Select***", new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @ModelMetadata.FromLambdaExpression(model => model.SpecialPriceItem, ViewData).Description
                @Html.ValidationMessageFor(model => model.SpecialPriceItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodeStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodeStart, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.CodeStart, ViewData).Description
                @Html.ValidationMessageFor(model => model.CodeStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodeEnd, new { htmlAttributes = new { @class = "form-control" } })
                @ModelMetadata.FromLambdaExpression(model => model.CodeEnd, ViewData).Description
                @Html.ValidationMessageFor(model => model.CodeEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

